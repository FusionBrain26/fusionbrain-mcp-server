name: Build and Test

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allow manual triggers from UI

env:
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

jobs:
  build:
    runs-on: ubuntu-latest
    container: maven:3.9.6-eclipse-temurin-17

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            .m2/repository
            target
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Compile
        run: mvn $MAVEN_CLI_OPTS compile

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: target/

  test:
    runs-on: ubuntu-latest
    container: maven:3.9.6-eclipse-temurin-17
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            .m2/repository
            target
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Clean
        run: mvn $MAVEN_CLI_OPTS clean

      - name: Run tests
        run: mvn $MAVEN_CLI_OPTS verify

      - name: Generate coverage report
        run: mvn $MAVEN_CLI_OPTS jacoco:report

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/*.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/site/jacoco/jacoco.xml

      - name: Publish JUnit Test Results
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: target/surefire-reports/*.xml
          check_name: JUnit Test Report

  release:
    runs-on: ubuntu-latest
    container: maven:3.9.6-eclipse-temurin-17
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            .m2/repository
            target
          key: ${{ runner.os }}-maven-release-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-release-

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: |
          mvn $MAVEN_CLI_OPTS clean package -DskipTests

      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Find JAR file
        id: find_jar
        run: |
          JAR_FILE=$(find target -name "*.jar" -type f ! -name "*-sources.jar" ! -name "*-javadoc.jar" | head -n 1)
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_OUTPUT
          echo "Found JAR: $JAR_FILE"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_jar.outputs.JAR_FILE }}
          asset_name: app-${{ steps.get_version.outputs.VERSION }}.jar
          asset_content_type: application/java-archive
